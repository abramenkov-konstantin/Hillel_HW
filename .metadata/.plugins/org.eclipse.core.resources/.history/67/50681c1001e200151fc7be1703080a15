package bstree;

import arc.BsTree;

public class BMain 
{
	public static void main(String[] args)
	{
		int[] ar = {50,25,33,70,11,28,60,100};
		//int[] ar = {8,3,10,1,6,14,4,7,13,15,11};
		//int[] ar = {5,4,9,3,8,15,1,6,10,18,25,26,7};
		
		BsTree tree = new BsTree(ar);
		
		System.out.print("Исходник:       ");
		for (int i=0; i<tree.size(); i++)
		{
			System.out.print(ar[i] + ", ");
		}
		
		System.out.println();
		System.out.print("tree.print():   ");
		tree.print();
		/*System.out.println();
		System.out.println("size = " + tree.size());
		System.out.println("nodes = " + tree.nodes());
		System.out.println("leaves = " + tree.leaves());
		System.out.println("height = " + tree.height());*/
		//System.out.println();
		//System.out.println("width = " + tree.width());
		/*System.out.println("findRef = " + tree.findRef(1));
		System.out.println("find = " + tree.findRef(1).getVal());
		System.out.println("findParentRef = " + tree.findParentRef(1));
		System.out.println("findParent = " + tree.findParentRef(1).getVal());*/
		//tree.delete(1);
				
		
		/*System.out.println("minVal = " + tree.minVal());
		System.out.println("minRef = " + tree.minRef());
		System.out.println("maxVal = " + tree.maxVal());
		System.out.println("maxRef = " + tree.maxRef());*/
		
		
		System.out.println();
		System.out.println(tree.delete(60));
		//System.out.println(tree.delete(10));
	   //System.out.println("width = " + tree.width());
		//tree.reverse();
		
			
		
		//tree.reverse();
		//System.out.println();
		System.out.print("tree.toArray(): ");
		for (int a : tree.toArray())
		{
			System.out.print(a + ", ");
		}
		
	}
}
